{"version":3,"sources":["../src/internal/get-full-api-url.ts"],"sourcesContent":["import { process } from \"std-env\";\n\n/*\n * Returns a full URL to the dev's uploadthing endpoint\n * Can take either an origin, or a pathname, or a full URL\n * and will return the \"closest\" url matching the default\n * `<VERCEL_URL || localhost>/api/uploadthing`\n */\nexport function getFullApiUrl(maybeUrl?: string): URL {\n  const base = (() => {\n    if (typeof window !== \"undefined\") return window.location.origin;\n    if (process.env?.VERCEL_URL) return `https://${process.env.VERCEL_URL}`;\n    return \"http://localhost:3000\";\n  })();\n\n  try {\n    const url = new URL(maybeUrl ?? \"/api/uploadthing\", base);\n    if (url.pathname === \"/\") {\n      url.pathname = \"/api/uploadthing\";\n    }\n    return url;\n  } catch (err) {\n    throw new Error(\n      `Failed to parse '${maybeUrl}' as a URL. Make sure it's a valid URL or path`,\n    );\n  }\n}\n\nexport function resolveMaybeUrlArg(maybeUrl: string | URL | undefined) {\n  return maybeUrl instanceof URL ? maybeUrl : getFullApiUrl(maybeUrl);\n}\n"],"mappings":";AAAA,SAAS,eAAe;AAQjB,SAAS,cAAc,UAAwB;AACpD,QAAM,QAAQ,MAAM;AATtB;AAUI,QAAI,OAAO,WAAW;AAAa,aAAO,OAAO,SAAS;AAC1D,SAAI,aAAQ,QAAR,mBAAa;AAAY,aAAO,WAAW,QAAQ,IAAI;AAC3D,WAAO;AAAA,EACT,GAAG;AAEH,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,YAAY,oBAAoB,IAAI;AACxD,QAAI,IAAI,aAAa,KAAK;AACxB,UAAI,WAAW;AAAA,IACjB;AACA,WAAO;AAAA,EACT,SAAS,KAAP;AACA,UAAM,IAAI;AAAA,MACR,oBAAoB;AAAA,IACtB;AAAA,EACF;AACF;AAEO,SAAS,mBAAmB,UAAoC;AACrE,SAAO,oBAAoB,MAAM,WAAW,cAAc,QAAQ;AACpE;","names":[]}