import * as h3 from 'h3';
import { H3Event } from 'h3';
import { U as UploadBuilder, F as FileRouter } from './types-b5a44cf1.js';
import * as _uploadthing_shared from '@uploadthing/shared';
import { Json } from '@uploadthing/shared';
import { C as CreateBuilderOptions, R as RouterWithConfig } from './upload-builder-e4cab397.js';

type MiddlewareArgs = {
    req: undefined;
    res: undefined;
    event: H3Event;
};
declare const createUploadthing: <TErrorShape extends Json>(opts?: CreateBuilderOptions<TErrorShape> | undefined) => (input: _uploadthing_shared.FileRouterInputConfig) => UploadBuilder<{
    _input: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _metadata: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _middlewareArgs: MiddlewareArgs;
    _errorShape: TErrorShape;
    _errorFn: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _output: "unsetMarker" & {
        __brand: "unsetMarker";
    };
}>;
declare const createRouteHandler: <TRouter extends FileRouter>(opts: RouterWithConfig<TRouter>) => h3.EventHandler<h3.EventHandlerRequest, Promise<unknown>>;
/**
 * @deprecated Use {@link createRouteHandler} instead
 */
declare const createH3EventHandler: <TRouter extends FileRouter>(opts: RouterWithConfig<TRouter>) => h3.EventHandler<h3.EventHandlerRequest, Promise<unknown>>;

export { FileRouter, createH3EventHandler, createRouteHandler, createUploadthing };
