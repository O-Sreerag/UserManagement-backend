{"version":3,"sources":["../src/fastify.ts"],"sourcesContent":["import type {\n  FastifyInstance,\n  FastifyReply,\n  FastifyRequest,\n  RouteHandlerMethod,\n} from \"fastify\";\n\nimport type { Json } from \"@uploadthing/shared\";\nimport { getStatusCodeFromError, UploadThingError } from \"@uploadthing/shared\";\n\nimport { UPLOADTHING_VERSION } from \"./constants\";\nimport { formatError } from \"./internal/error-formatter\";\nimport type { RouterWithConfig } from \"./internal/handler\";\nimport {\n  buildPermissionsInfoHandler,\n  buildRequestHandler,\n} from \"./internal/handler\";\nimport { incompatibleNodeGuard } from \"./internal/incompat-node-guard\";\nimport { initLogger } from \"./internal/logger\";\nimport { toWebRequest } from \"./internal/node-http/toWebRequest\";\nimport type { FileRouter } from \"./internal/types\";\nimport type { CreateBuilderOptions } from \"./internal/upload-builder\";\nimport { createBuilder } from \"./internal/upload-builder\";\n\nexport type { FileRouter };\n\ntype MiddlewareArgs = {\n  req: FastifyRequest;\n  res: FastifyReply;\n  event: undefined;\n};\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<MiddlewareArgs, TErrorShape>(opts);\n\nexport const createRouteHandler = <TRouter extends FileRouter>(\n  fastify: FastifyInstance,\n  opts: RouterWithConfig<TRouter>,\n  done: (err?: Error) => void,\n) => {\n  initLogger(opts.config?.logLevel);\n  incompatibleNodeGuard();\n\n  const requestHandler = buildRequestHandler<TRouter, MiddlewareArgs>(\n    opts,\n    \"fastify\",\n  );\n  const getBuildPerms = buildPermissionsInfoHandler<TRouter>(opts);\n\n  const POST: RouteHandlerMethod = async (req, res) => {\n    const proto = (req.headers[\"x-forwarded-proto\"] as string) ?? \"http\";\n    const url = new URL(req.url, `${proto}://${req.headers.host}`);\n\n    const response = await requestHandler({\n      nativeRequest: toWebRequest(req, url),\n      originalRequest: req,\n      res,\n      event: undefined,\n    });\n\n    if (response instanceof UploadThingError) {\n      void res\n        .status(getStatusCodeFromError(response))\n        .headers({\n          \"x-uploadthing-version\": UPLOADTHING_VERSION,\n        })\n        .send(formatError(response, opts.router));\n      return;\n    }\n\n    if (response.status !== 200) {\n      // We messed up - this should never happen\n      void res\n        .status(500)\n        .headers({\n          \"x-uploadthing-version\": UPLOADTHING_VERSION,\n        })\n        .send(\"An unknown error occured\");\n      return;\n    }\n\n    void res\n      .status(response.status)\n      .headers({\n        \"x-uploadthing-version\": UPLOADTHING_VERSION,\n      })\n      .send(response.body);\n  };\n\n  const GET: RouteHandlerMethod = async (req, res) => {\n    void res\n      .status(200)\n      .headers({\n        \"x-uploadthing-version\": UPLOADTHING_VERSION,\n      })\n      .send(getBuildPerms());\n  };\n\n  fastify.post(\"/api/uploadthing\", POST).get(\"/api/uploadthing\", GET);\n\n  done();\n};\n\n/**\n * @deprecated Use {@link createRouteHandler} instead\n */\nexport const fastifyUploadthingPlugin = createRouteHandler;\n"],"mappings":";;;;;;;;;;;;;;;;AAQA,SAAS,wBAAwB,wBAAwB;AAwBlD,IAAM,oBAAoB,CAC/B,SACG,cAA2C,IAAI;AAE7C,IAAM,qBAAqB,CAChC,SACA,MACA,SACG;AAxCL;AAyCE,cAAW,UAAK,WAAL,mBAAa,QAAQ;AAChC,wBAAsB;AAEtB,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,EACF;AACA,QAAM,gBAAgB,4BAAqC,IAAI;AAE/D,QAAM,OAA2B,OAAO,KAAK,QAAQ;AACnD,UAAM,QAAS,IAAI,QAAQ,mBAAmB,KAAgB;AAC9D,UAAM,MAAM,IAAI,IAAI,IAAI,KAAK,GAAG,WAAW,IAAI,QAAQ,MAAM;AAE7D,UAAM,WAAW,MAAM,eAAe;AAAA,MACpC,eAAe,aAAa,KAAK,GAAG;AAAA,MACpC,iBAAiB;AAAA,MACjB;AAAA,MACA,OAAO;AAAA,IACT,CAAC;AAED,QAAI,oBAAoB,kBAAkB;AACxC,WAAK,IACF,OAAO,uBAAuB,QAAQ,CAAC,EACvC,QAAQ;AAAA,QACP,yBAAyB;AAAA,MAC3B,CAAC,EACA,KAAK,YAAY,UAAU,KAAK,MAAM,CAAC;AAC1C;AAAA,IACF;AAEA,QAAI,SAAS,WAAW,KAAK;AAE3B,WAAK,IACF,OAAO,GAAG,EACV,QAAQ;AAAA,QACP,yBAAyB;AAAA,MAC3B,CAAC,EACA,KAAK,0BAA0B;AAClC;AAAA,IACF;AAEA,SAAK,IACF,OAAO,SAAS,MAAM,EACtB,QAAQ;AAAA,MACP,yBAAyB;AAAA,IAC3B,CAAC,EACA,KAAK,SAAS,IAAI;AAAA,EACvB;AAEA,QAAM,MAA0B,OAAO,KAAK,QAAQ;AAClD,SAAK,IACF,OAAO,GAAG,EACV,QAAQ;AAAA,MACP,yBAAyB;AAAA,IAC3B,CAAC,EACA,KAAK,cAAc,CAAC;AAAA,EACzB;AAEA,UAAQ,KAAK,oBAAoB,IAAI,EAAE,IAAI,oBAAoB,GAAG;AAElE,OAAK;AACP;AAKO,IAAM,2BAA2B;","names":[]}