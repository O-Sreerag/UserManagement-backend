// src/internal/get-full-api-url.ts
import { process } from "std-env";
function getFullApiUrl(maybeUrl) {
  const base = (() => {
    var _a;
    if (typeof window !== "undefined")
      return window.location.origin;
    if ((_a = process.env) == null ? void 0 : _a.VERCEL_URL)
      return `https://${process.env.VERCEL_URL}`;
    return "http://localhost:3000";
  })();
  try {
    const url = new URL(maybeUrl ?? "/api/uploadthing", base);
    if (url.pathname === "/") {
      url.pathname = "/api/uploadthing";
    }
    return url;
  } catch (err) {
    throw new Error(
      `Failed to parse '${maybeUrl}' as a URL. Make sure it's a valid URL or path`
    );
  }
}
function resolveMaybeUrlArg(maybeUrl) {
  return maybeUrl instanceof URL ? maybeUrl : getFullApiUrl(maybeUrl);
}

export {
  getFullApiUrl,
  resolveMaybeUrlArg
};
//# sourceMappingURL=chunk-4QCB7YXI.mjs.map